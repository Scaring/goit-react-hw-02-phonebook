{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactItem.js","components/ContactsList/ContactsList.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","onSubmit","find","contact","toLowerCase","alert","resetState","this","className","styles","contactForm","contactFormInput","type","onChange","Component","Filter","filter","ContactsItem","onDelete","onClick","ContactsList","contactsList","map","contactsListItem","key","id","App","addContact","contactToAdd","uuidv4","handleDeleteContact","filteredContacts","includes","filterContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c47ae52e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__27Amb\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ContactForm/ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { name: '', number: '' };\n\n  resetState() {\n    this.setState({ name: '', number: '' });\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name } = this.state;\n    const { contacts, onSubmit } = this.props;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n      return;\n    } else if (!name) return;\n\n    onSubmit({ ...this.state });\n\n    this.resetState();\n  };\n\n  render() {\n    return (\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n        <label className={styles.contactFormInput}>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <label className={styles.contactFormInput}>\n          <span>Number</span>\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <label className={styles.filter}>\n      Find contact by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ContactsItem({ name, number, onDelete }) {\n  return (\n    <Fragment>\n      <span>\n        {name}: {number}\n      </span>\n      <button type=\"button\" onClick={onDelete}>\n        Delete\n      </button>\n    </Fragment>\n  );\n}\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactsItem from './ContactItem';\nimport styles from './ContactsList.module.css';\n\nfunction ContactsList({ contacts, onDelete }) {\n  return (\n    <ul className={styles.contactsList}>\n      {contacts.map(contact => {\n        return (\n          <li className={styles.contactsListItem} key={contact.id}>\n            <ContactsItem {...contact} onDelete={() => onDelete(contact.id)} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  onDelete: PropTypes.func,\n};\n\nexport default ContactsList;\n","import React, { Component, Fragment } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactsList from './ContactsList/ContactsList';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = contact => {\n    const contactToAdd = {\n      ...contact,\n      id: uuidv4(),\n    };\n\n    this.setState(state => ({\n      contacts: [...state.contacts, contactToAdd],\n    }));\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleDeleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <Fragment>\n        <h2>Phonebook</h2>\n        <ContactForm\n          contacts={this.state.contacts}\n          onSubmit={this.addContact}\n        />\n        {this.state.contacts.length >= 1 && <h2>Contacts</h2>}\n        {this.state.contacts.length >= 2 && (\n          <Filter filter={this.filter} onChange={this.handleChange} />\n        )}\n        {this.state.contacts.length >= 1 && (\n          <ContactsList\n            contacts={filteredContacts}\n            onDelete={this.handleDeleteContact}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__KBT0K\",\"contactFormInput\":\"ContactForm_contactFormInput__pXJY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__1CsrM\",\"contactsListItem\":\"ContactsList_contactsListItem__BZvc7\"};"],"sourceRoot":""}